name: Build majestic runtime

on: push

env:
  LD_LIBRARY_PATH: /usr/local/lib

jobs:

  ubuntu-runtime:
    name: Runtime (Ubuntu)
    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v2

    - name: Build runtime
      working-directory: ./src/runtime/c
      run: |
        autoreconf -i
        ./configure
        make
        sudo make install

    - name: Upload artifact
      uses: actions/upload-artifact@master
      with:
        name: libpgf-ubuntu
        path: |
          /usr/local/lib/libpgf*
          /usr/local/include/pgf

  ubuntu-haskell:
    name: Haskell (Ubuntu)
    runs-on: ubuntu-20.04
    needs: ubuntu-runtime

    steps:
    - uses: actions/checkout@v2
    - name: Download artifact
      uses: actions/download-artifact@master
      with:
        name: libpgf-ubuntu
    - run: |
        sudo mv lib/* /usr/local/lib/
        sudo mv include/* /usr/local/include/

    - name: Setup Haskell
      uses: haskell/actions/setup@v1

    - name: Build & run testsuite
      working-directory: ./src/runtime/haskell
      run: |
        cabal test --extra-lib-dirs=/usr/local/lib

  ubuntu-python:
    name: Python (Ubuntu)
    runs-on: ubuntu-20.04
    needs: ubuntu-runtime

    steps:
    - uses: actions/checkout@v2
    - name: Download artifact
      uses: actions/download-artifact@master
      with:
        name: libpgf-ubuntu
    - run: |
        sudo mv lib/* /usr/local/lib/
        sudo mv include/* /usr/local/include/

    - name: Install bindings
      working-directory: ./src/runtime/python
      run: |
        python setup.py build
        sudo python setup.py install

    - name: Run testsuite
      working-directory: ./src/runtime/python
      run: |
        pip install pytest
        pytest

  ubuntu-javascript:
    name: JavaScript (Ubuntu)
    runs-on: ubuntu-20.04
    needs: ubuntu-runtime

    steps:
    - uses: actions/checkout@v2
    - name: Download artifact
      uses: actions/download-artifact@master
      with:
        name: libpgf-ubuntu
    - run: |
        sudo mv lib/* /usr/local/lib/
        sudo mv include/* /usr/local/include/

    - name: Install dependencies
      working-directory: ./src/runtime/javascript
      run: |
        npm ci

    - name: Run testsuite
      working-directory: ./src/runtime/javascript
      run: |
        npm run test

# ----------------------------------------------------------------------------

  macos-runtime:
    name: Runtime (macOS)
    runs-on: macOS-11

    steps:
    - uses: actions/checkout@v2

    - name: Install build tools
      run: |
        brew install \
          autoconf \
          automake \
          libtool \

    - name: Build runtime
      working-directory: ./src/runtime/c
      run: |
        glibtoolize
        autoreconf -i
        ./configure
        make
        sudo make install

    - name: Upload artifact
      uses: actions/upload-artifact@master
      with:
        name: libpgf-macos
        path: |
          /usr/local/lib/libpgf*
          /usr/local/include/pgf

  macos-haskell:
    name: Haskell (macOS)
    runs-on: macOS-11
    needs: macos-runtime

    steps:
    - uses: actions/checkout@v2
    - name: Download artifact
      uses: actions/download-artifact@master
      with:
        name: libpgf-macos
    - run: |
        sudo mv lib/* /usr/local/lib/
        sudo mv include/* /usr/local/include/

    - name: Setup Haskell
      uses: haskell/actions/setup@v1

    - name: Build & run testsuite
      working-directory: ./src/runtime/haskell
      run: |
        javac -cp .:/usr/share/java/junit4.jar TestBasic.java
        java -Djava.library.path=$LD_LIBRARY_PATH -cp .:/usr/share/java/junit4.jar org.junit.runner.JUnitCore TestBasic
          
#  macos:
#    name: Build on macOS
#    runs-on: macOS-11
#
#    steps:
#    - uses: actions/checkout@v2
#
#    # All these are already available in GitHub runner
#    # - name: Install build tools
#    #   run: |
#    #     sudo apt-get update
#    #     sudo apt-get install -y \
#    #       autoconf \
#    #       automake \
#    #       libtool \
#    #       make \
#    #       g++
#
#    - name: Build C runtime
#      working-directory: ./src/runtime/c
#      run: |
#        glibtoolize
#        autoreconf -i
#        ./configure
#        make
#        sudo make install
#
#    - name: Setup Haskell
#      uses: haskell/actions/setup@v1
#      # with:
#      #   ghc-version: '8.6'
#      #   cabal-version: '2.4.1.0'

    # - name: Run Haskell testsuite
    #   working-directory: ./src/runtime/haskell
    #   env:
    #     LD_LIBRARY_PATH: /usr/local/lib
    #   run: |
    #     cabal test --extra-lib-dirs=/usr/local/lib

    # - name: Install Python bindings
    #   working-directory: ./src/runtime/python
    #   run: |
    #     python setup.py build
    #     sudo python setup.py install
    #
    # - name: Run Python testsuite
    #   working-directory: ./src/runtime/python
    #   env:
    #     LD_LIBRARY_PATH: /usr/local/lib
    #   run: |
    #     pip install pytest
    #     pytest
    #
    # - name: Run JavaScript testsuite
    #   working-directory: ./src/runtime/javascript
    #   env:
    #     LD_LIBRARY_PATH: /usr/local/lib
    #   run: |
    #     npm ci
    #     npm run test
